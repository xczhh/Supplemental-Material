# -*- coding: utf-8 -*-
from model_cap import get_grnn, train_han,get_cnn_capnet, get_attLSTM,get_hier_attLSTM,get_hier_att_based
import numpy as np
from keras.models import load_model
max_sequence = maxLen = 300
from utils.att import Attention, AttentionWithContext, AttentionLayer, Attention1
vec_path = "E:\\compare_test\\data\\over_sampling\\words300"

word_embeddings = []
word2id = {}
f = open(vec_path, "r", encoding='utf-8')
content = f.readline()
while True:
    content = f.readline()
    if content == "":
        break
    content = content.strip().split()
    word2id[content[0]] = len(word2id)  # word->id
    content = content[1:]
    content = [(float)(i) for i in content]
    word_embeddings.append(content)
f.close()
word2id['UNK'] = len(word2id)  # word2id[28] word_embeddings[26, 100]
word2id['BLANK'] = len(word2id)
lists = [0.0 for i in range(len(word_embeddings[0]))]  # lists: [100]
word_embeddings.append(lists)
word_embeddings.append(lists)
word_embeddings=np.array(word_embeddings)

#test_x=["肝 右叶 巨大 肿块 ， 考虑 原发性 肝癌 ， 肝内 多个 子灶 ， 合并 门静脉 主干 及 左右 分支 癌栓 形成 ， 门 静脉 曲张 （ 肝门 海绵 样变 ） ， 肝门区 淋巴结 转移 。 大 网膜 及 肠系膜 间隙 浑浊 ， 并 多发 淋巴结 肿大 ， 腹膜 后 淋巴结 增大 ， 考虑 转移 可能 。 肝硬化 ， 少量 腹水 ； 食管 下 段 、 胃底 周围 静脉曲张 。 胆囊炎 。 右肺 中叶 及 左 肺 上 叶上 舌段 、 下舌段 多发 纤维 灶 。 双肺 数个 小 结节 ， 考虑 炎 性病变 可能 ， 建议 复查 。 "]
test_x = ["肝 右叶 巨大 肿块 ， 考虑 原发性 肝癌 ， 肝内 多个 子灶 ， 合并 门 静脉 主干 及 左右 分支 癌栓 形成 ， 门 静脉 曲张 （ 肝门 海绵 样变 ） ， 肝门区 淋巴结 转移 。 大 网膜 及 肠系膜 间隙 浑浊 ， 并 多发 淋巴结 肿大 ， 腹膜 后 淋巴结 增大 ， 考虑 转移 可能 。 肝硬化 ， 少量 腹水 ； 食管 下 段 、 胃底 周围 静脉曲张 。 胆囊炎 。 右肺 中叶 及 左 肺 上叶 上舌段 、 下舌段 多发 纤维 灶 。 双肺 数个 小 结节 ， 考虑 炎性 病变 可能 ， 建议 复查 。 "]

blank = word2id['BLANK']
size = len(test_x)
for i in range(size):
    text = [blank for j in range(max_sequence)]
    content = test_x[i].split()
    for j in range(len(content)):
        if (j == max_sequence):
            break
        if not content[j] in word2id:
            text[j] = word2id['UNK']
        else:
            text[j] = word2id[content[j]]
    test_x[i] = text
test_x = np.array(test_x)
test_x = np.expand_dims(test_x,axis=1)

Attention1 = Attention1(step_dim=128)
#model =get_hier_attLSTM(maxLen, embWeights=word_embeddings, embeddingSize=200, vocabSize=20000)#embWeights=bert_model)#embWeights=word_embeddings, embeddingSize=200, vocabSize=20000)
model = load_model("modelvisual/0modelev.h5", custom_objects={'Attention1': Attention1})
#model = model.load_weights("model0.2/40model.h5")
pred = model.predict(test_x, batch_size=1, verbose=1)
#print(documentemb)
print(pred[0].tolist())

# weight visualization

listp= [-0.37873679399490356, -0.3607403635978699, 0.11436804383993149, 0.2938779592514038, 0.4643719494342804, -0.10377861559391022, 0.6533828973770142, -0.5777376890182495, -0.1045929417014122, -0.5532663464546204, -0.013028223998844624, -0.23471367359161377, -0.6474539637565613, 0.13279187679290771, 0.6150001883506775, 0.3793899118900299, -0.6278715133666992, 0.09317362308502197, -0.13623814284801483, 0.414070188999176, -0.350676566362381, 0.02976442128419876, -0.32997432351112366, 0.39966005086898804, -0.27912813425064087, -0.21410103142261505, -0.2741643786430359, 0.48541712760925293, 0.20955632627010345, 0.14254352450370789, 0.07457178086042404, -0.5228642821311951, 0.4011600911617279, -0.3112121522426605, 0.0024219409096986055, 0.08032968640327454, 0.4527055323123932, 0.5435389280319214, 0.3639862835407257, 0.08731551468372345, 0.13077707588672638, 0.4852215349674225, -0.5124407410621643, 0.28625136613845825, -0.10470788180828094, -0.6000768542289734, -0.4635160565376282, -0.08056647330522537, 0.5413442850112915, 0.46880459785461426, 0.49299678206443787, -0.21207113564014435, -0.5856063961982727, -0.3922632336616516, -0.05496206879615784, 0.6396887302398682, 0.03824153169989586, 0.14819176495075226, 0.27004697918891907, 0.08252580463886261, 0.016281533986330032, 0.6196368336677551, 0.2915915250778198, 0.5500701665878296, -0.5692505836486816, -0.5485010147094727, -0.5509830117225647, 0.199472576379776, 0.5596870183944702, -0.060026153922080994, -0.029956528916954994, -0.48583775758743286, -0.08225149661302567, -0.27123311161994934, 0.25201982259750366, -0.3871998190879822, -0.6257917881011963, -0.6597516536712646, -0.02298056147992611, 0.5152060985565186, 0.5907543897628784, -0.5205329060554504, 0.0024291789159178734, 0.5169692039489746, -0.235076904296875, -0.08923502266407013, -0.1073111742734909, -0.16874940693378448, 0.15155135095119476, 0.3624056577682495, 0.1406945288181305, 0.3574930727481842, 0.2984936833381653, -0.6230035424232483, 0.08757754415273666, 0.016717147082090378, -0.2436651736497879, -0.037219882011413574, 0.35937121510505676, 0.509358823299408, 0.6133421063423157, -0.22018548846244812, -0.26218676567077637, -0.012378225103020668, 0.31393706798553467, 0.4403612017631531, -0.4778229296207428, -0.023412292823195457, 0.07100342959165573, 0.1813267469406128, -0.16335812211036682, 0.6290079951286316, 0.3259875178337097, -0.6359418630599976, 0.20394082367420197, -0.5559718608856201, -0.6236327290534973, -0.2829081118106842, -0.687537670135498, 0.3048816919326782, -0.3604438006877899, -0.4113268256187439, -0.03561064973473549, -0.6494114398956299, 0.4899238348007202, 0.27515146136283875, 0.06291595101356506, 0.48626959323883057, 0.3162885904312134, 0.5630306005477905, -0.4962594509124756, 0.640020489692688, 0.09600955247879028, -0.1097186803817749, -0.19555941224098206, 0.3854933977127075, 0.009297490119934082, 0.12522079050540924, 0.4548514485359192, 0.027222104370594025, 0.46670418977737427, -0.3427559435367584, -0.5930300951004028, -0.5928283333778381, 0.035299744457006454, 0.5599320530891418, 0.02986384741961956, 0.40725958347320557, 0.13701169192790985, 0.45597851276397705]



str1 ="肝 右叶 巨大 肿块 ， 考虑 原发性 肝癌 ， 肝内 多个 子灶 ， 合并 门静脉 主干 及 左右 分支 癌栓 形成 ， 门静脉 曲张 （ 肝门 海绵 样变 ） ， 肝门区 淋巴结 转移 。 大 网膜 及 肠系膜 间隙 浑浊 ， 并 多发 淋巴结 肿大 ， 腹膜 后 淋巴结 增大 ， 考虑 转移 可能 。 肝硬化 ， 少量 腹水 ； 食管 下 段 、 胃底 周围 静脉曲张 。 胆囊炎 。 右肺 中叶 及 左 肺 上叶 上舌段 、 下舌段 多发 纤维 灶 。 双肺 数个 小 结节 ， 考虑 炎性 病变 可能 ， 建议 复查 。 "
vis_str = str1.strip().split()

begin_template = r"\documentclass[varwidth]{standalone}  \special{papersize=150mm,180mm} \usepackage{color} \usepackage{tcolorbox}  \usepackage{CJK} \usepackage{adjustbox} \tcbset{width=0.8\textwidth,boxrule=0pt,colback=red,arc=0pt,auto outer arc,left=0pt,right=0pt,boxsep=5pt} \begin{document} \begin{CJK*}{UTF8}{gbsn} {\setlength{\fboxsep}{0pt}\colorbox{white!0}{\parbox{\textwidth}{"
for i in range(0, len(vis_str)):
    vis_num = ((listp[i]-(-1))/(1-(-1)))*100
    template = "\colorbox{red!"+str(vis_num)+"}{\strut "+ vis_str[i] +"} "
    begin_template += template

end_template = r"}}} \end{CJK*} \end{document}"
begin_template += end_template
print(begin_template)
